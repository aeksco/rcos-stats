{ "_id" : { "$oid" : "565e0f934bd5283e023af6e8" }, "title" : "Thanksgiving Update", "content" : "Hi guys! \n        I hope everyone had an awesome Thanksgiving. Over Thanksgiving, the Observatory team was going through issues and  a couple pull requests were made. I worked on users being able to tag their own project as a 'past' or 'present' project as well as fixing up some simple console error issues. I also tried to work on adding a feature so that a user could make their account inactive. However, I am running into server authentication errors. In terms of other Observatory issues, a PR has been submitted to make attendance work again with the smallgroup feature that has been added. This week I hope to fix that server error and get working on my search issue! \n\n-Varun", "date" : { "$date" : "2015-12-01T16:22:30.828-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e60740b997149c20e59afd" }, "__v" : 0 }

{ "_id" : { "$oid" : "565e224b4bd5283e023af6f7" }, "title" : "Starter Projects", "content" : "One common problem for people new to RCOS is finding a project to join. To solve this, I've added a feature to let admins and mentors mark certain projects as 'starter projects'. These are presented in a list with their description and images to users right after they register an account, so that they can immediately join one that suits their interests and skill set. Hopefully the feature will be useful for future semesters, especially as RCOS grows with new members and projects.", "date" : { "$date" : "2015-12-01T17:42:11.338-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e9f8fedacfb1eb7f49d4b5" }, "__v" : 0 }

{ "_id" : { "$oid" : "565f719c4bd5283e023af6fd" }, "title" : "We all make mistakes", "content" : "Hey everyone! One problem people face when using Observatory is that they sometimes enter the wrong information or it needs to be updated. This was especially relevant for the users github accounts as this is used to track commit's and is needed by other members of the project.  To fix this I added the functionality to change your github account information on Observatory so you can always have the most updated contact info. I hope everyone enjoys the new feature and keeps their github's updated!", "date" : { "$date" : "2015-12-02T17:33:00.853-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55f31df2dacfb1eb7f49d4f2" }, "__v" : 0 }

{ "_id" : { "$oid" : "5660293b4bd5283e023af704" }, "title" : "Blog fixes", "content" : "A critical issue with the Observatory blog feature recently came up: regular users can't edit or delete blog posts, even if they wrote them. This is especially important as the semester is coming to a close and people are writing up their progress. I made a fix within a couple hours of hearing of it, but as of now it's not yet on the live site. \n\nI'm making this post on the off chance that people who are running into this problem come to this blog. Hopefully, the fix will soon be live.", "date" : { "$date" : "2015-12-03T06:36:35.392-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e9f8fedacfb1eb7f49d4b5" }, "__v" : 0 }

{ "_id" : { "$oid" : "5660bdae4bd5283e023af70b" }, "title" : "Editing Title", "content" : "One of the first issues that I fixed on Observatory was the issue that no one could edit the title of a project. This could mean that the project name could be incorrectly spelled or the project's name could change after the initial post and the project could be stuck with a name that is not correct. To do this I had to learn some basic HTML, CSS, AngularJS, and NodeJS. I had to write server API endpoints and play with the HTML formatting. Learning and using AngularJS was an interesting experience since I had never used AngularJS up to that point. I used Angular commands like ng-show and ng-click to implement this feature. By now, this feature has been deployed to the main Observatory site so now everyone can now edit the title of their project.", "date" : { "$date" : "2015-12-03T17:09:55.232-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e60740b997149c20e59afd" }, "__v" : 0 }

{ "_id" : { "$oid" : "5660c2b54bd5283e023af70c" }, "title" : "Filtering", "content" : "One feature that was of high importance for Observatory was sorting through all of the wonderful projects we have made in RCOS. To do this I created a search bar on the projects page. I had never completed a feature like this before so I did some research on how to implement a search bar. I decided upon using filters on the client side. This allowed me to filter all the objects displayed to the client and only show the ones that had a title with the search string somewhere in it. After completing this I also integrated filtering through tech tags. In the same search box you can type a tech such as \"python\" or \"MongoDB\" and see all the projects that contain this tech. To do this I added onto my filter. I had the filter to check that the project name contained the search string or one of the tech's in each project contained the search string. With these changes you can now find projects by name or by what technology they are using. I hope everyone enjoys the new feature.", "date" : { "$date" : "2015-12-03T17:31:17.135-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55f31df2dacfb1eb7f49d4f2" }, "__v" : 0 }

{ "_id" : { "$oid" : "5660fa924bd5283e023af70f" }, "title" : "Footer Control", "content" : "So, now on Observatory there should footers on every page. One of the features that was missing from the Observatory site was that there was not a footer on every page. To solve this problem, I had to add a new client component, a footer. This component simply had the HTML of the original footer. With this, it was very easy to apply footers to every page since this meant just adding the component to every page. The footer consists of the name of the website (Observatory), a link to the GitHub, and a link back to the main Observatory page. Another small feature that was added was the donate link which is now on the main page.", "date" : { "$date" : "2015-12-03T21:29:42.117-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e60740b997149c20e59afd" }, "__v" : 0 }

{ "_id" : { "$oid" : "566109644bd5283e023af710" }, "title" : "Fixing bugs", "content" : "Outside of working on features, I've been fixing a few bugs around Observatory. These include fixing the blog, some style modifications, and some backend fixes. \n\nFor for those of you who need to use Observatory as part of RCOS: please don't be afraid to report bugs by making issues on Github. Sometimes critical bugs don't get discovered by people working on Observatory until after they've been live for quite some time. Issues and bug reports really help us and are always appreciated. Fixing them also helps me get better at using Angular and Express/Node. :P\n\nAdditionally, if you want to make pull requests please go ahead.", "date" : { "$date" : "2015-12-03T22:33:02.046-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e9f8fedacfb1eb7f49d4b5" }, "__v" : 0 }

{ "_id" : { "$oid" : "5661c3f94bd5283e023af71d" }, "title" : "Overall Design", "content" : "One problem that is sometimes overlooked when implementing new features is the visual design and layout for the user. It is something that I am still working on focusing on when I implement new features. One thing people can do to help Observatory is not only create issues for features that need to be implemented or fixed. They should also add issues for UI changes, and other design changes. We want Observatory to be easy to use and design improvements can help us reach this goal.", "date" : { "$date" : "2015-12-04T11:48:57.566-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55f31df2dacfb1eb7f49d4f2" }, "__v" : 0 }

{ "_id" : { "$oid" : "56624bd54bd5283e023af74d" }, "title" : "Observatory Ending Notes", "content" : "Over the past semester, we added some pretty key features to Observatory, which are the following: \n\n1. A functional small-group system\n2. Ability to mark a project as a default project, letting mentors choose good projects for beginner RCOS members \n3. Numerous editable features on user profile \n4. Ability to search through the available projects \n5. Added Project Tech Tags \n6. Multiple Repository Support \n7. Attendance Support \n8. Added HTTPS protocol\n\nThese were some of the major changes to Observatory, however, there were other numerous smaller bug fixes as well as feature changes. Many of these changes have simply not been deployed yet on the main site. In terms of features we hope to add to the main site, we hope to add more functionality to the small-group feature and maybe even adding the ability to view the project presentation schedule on the rcos main site. \n\nOverall working on this project has been awesome! I have learned so much from this project. Specifically I learned a lot about the MEAN stack, git, and how to work in an opens source project. \n\nIf anybody has any issue with Observatory please post your issues on our github: https://github.com/rcos/Observatory3 \nSee you next semester!", "date" : { "$date" : "2015-12-04T21:28:42.484-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e60740b997149c20e59afd" }, "__v" : 0 }

{ "_id" : { "$oid" : "56674dfd4bd5283e023af775" }, "title" : "Notes on issues", "content" : "As I was browsing for issues I was quite surprised to see one that looked just like the one I finished. While its better to get more than fewer, we do need to check that the issue isn't a repeat before we start coding.", "date" : { "$date" : "2015-12-08T16:39:09.183-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e60646b997149c20e59afa" }, "__v" : 0 }

{ "_id" : { "$oid" : "56df564f8a97e21f2212952a" }, "title" : "User Interface Changes", "content" : "Recently I have been working on change involving the look and feel of the website. This has included, but is not limited to the small group, project and attendance pages.", "date" : { "$date" : "2016-03-08T17:46:39.421-0500" }, "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "5654aa164bd5283e023af6c1" }, "__v" : 0 }

{ "_id" : { "$oid" : "572b5c837f63f991054fec5b" }, "updatedAt" : { "$date" : "2016-05-05T10:45:23.277-0400" }, "createdAt" : { "$date" : "2016-05-05T10:45:23.277-0400" }, "content" : "I'm finally getting around to doing blog posts, so expect a blog post for each task of the semester, all done in one day.\n\nThis semester was my first semester with both Observatory and RCOS, so this meant that I had to get more familiarized with both github and the technologies used in Observatory.\n\nTo get started, I was assigned a couple easy issues, such as adding a view all button to the developers page. The developers page was originally sorted by pages, but I added a view all button that allows an Observatory user to view all developers on one page. The button switches between view all and view less, depending on which mode viewing is in. Overall, it was a pretty simple update but it helped me to understand how Observatory's structure works.", "title" : "My introduction to Observatory", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "5654ab8d4bd5283e023af6c4" }, "date" : { "$date" : "2016-05-05T10:45:23.275-0400" }, "__v" : 0 }

{ "_id" : { "$oid" : "572b62bd7f63f991054fec5d" }, "updatedAt" : { "$date" : "2016-05-05T11:11:57.425-0400" }, "createdAt" : { "$date" : "2016-05-05T11:11:57.425-0400" }, "title" : "Fun with modals", "content" : "The next large task I tackled was adding a modal to the project page. Originally, the project page was littered with stopgap buttons, with one button for each action.\n\nA lot of users were complaining about not being able to edit their project page, like when their website had changed or they had created the project with an error or typo. Adding additional actions would clutter up the page more, and what the project page ultimately needed was a modal where an Observatory user could edit any field he or she wished.\n\nI copy and pasted the preexisting modal from the add projects area, but was informed that the modal should probably be extended to a separate component so that the same one can be used in both places. I was able to do so, but the edit modal needed to be populated when used so that the user would not have to fill out all the already-filled fields out again. I needed Aaron's help here. In the process of adding this population, some strange form nesting occurred, which Aaron also fixed.", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "5654ab8d4bd5283e023af6c4" }, "date" : { "$date" : "2016-05-05T11:11:57.424-0400" }, "__v" : 0 }

{ "_id" : { "$oid" : "572b6aed7f63f991054fec5e" }, "updatedAt" : { "$date" : "2016-05-05T11:46:53.591-0400" }, "createdAt" : { "$date" : "2016-05-05T11:46:53.591-0400" }, "content" : "I fixed a couple small issues, like adding the large groups link to the homepage and fixing the view all button, which in the couple months since its addition had become bugged.\n\nMy last big feature of the semester will be the sorted blog posts. On some long-standing projects, there are many blog posts, which can make it difficult to scroll through and find particular blog posts. I added a semester selector so that Observatory users can either view all blog posts, or select a particular semester's worth of blog posts to view.\n\nThe difficult part of implementing the sorting was not the actual sorting, but rather finding the actual syntax to make it work. The example in the javascript documentation was for strict by-word filtering, which is not what I wanted, so I had to tinker and search until I found a Slack Overflow post which had the syntax of the custom filtering.\n\nI need to make sure that my implementation works correctly with past semesters, so I am currently trying to modify the blog seed files to allow me to test past semester functionality.", "title" : "Sorting blog posts", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "5654ab8d4bd5283e023af6c4" }, "date" : { "$date" : "2016-05-05T11:46:53.589-0400" }, "__v" : 0 }

{ "_id" : { "$oid" : "57d6e3740cf0c6083055a85b" }, "updatedAt" : { "$date" : "2016-09-12T13:18:44.952-0400" }, "createdAt" : { "$date" : "2016-09-12T13:18:44.952-0400" }, "title" : "Fall 2016 Project Proposal", "content" : "https://paper.dropbox.com/doc/Observatory-Project-Proposal-vvGAKuujKKgODGMG8VI1Y", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55f790d0152081d8678c5b42" }, "date" : { "$date" : "2016-09-12T13:18:44.950-0400" }, "__v" : 0 }

{ "_id" : { "$oid" : "581b900d3da7a8fb1c305f74" }, "updatedAt" : { "$date" : "2016-11-03T15:29:17.366-0400" }, "createdAt" : { "$date" : "2016-11-03T15:29:17.366-0400" }, "title" : "Writing Tests", "content" : "Over the past couple weeks I have been writing tests to make sure that our achievement and project endpoints work correctly. Writing tests is very important to making sure that nothing unexpected breaks after making a big change. Without tests, one could run into the embarrassing situation where the user finds site-breaking bugs that you didn't know existed. For the next couple weeks I will keep writing tests. Our goal is to get 75% test coverage for all our endpoints, so, we still have a long way to go!", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e60740b997149c20e59afd" }, "date" : { "$date" : "2016-11-03T15:29:17.361-0400" }, "__v" : 0 }

{ "_id" : { "$oid" : "581baeac3da7a8fb1c305f75" }, "updatedAt" : { "$date" : "2016-11-03T17:39:56.272-0400" }, "createdAt" : { "$date" : "2016-11-03T17:39:56.272-0400" }, "title" : "Progress Update: Github Integration", "content" : "Over the past few weeks I've been working on implementing github integration. More specifically, I've been working on implementing getting commits for an RCOS project and storing them in our database. This provides us with data which we can use in many different ways. One example would be monitoring how active a project is (or isn't). It will also make it much easier for mentors to know the status for the projects that they are mentoring. \n\nCommit integration is only the first step. Within the next few weeks I am also planning to integrate more activity based aspects of github, such as issues, pull requests, etc...", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "57c5ece57f63f991054fed41" }, "date" : { "$date" : "2016-11-03T17:39:56.271-0400" }, "__v" : 0 }

{ "_id" : { "$oid" : "582223cdde8ccfb3149b2179" }, "updatedAt" : { "$date" : "2016-11-08T14:13:17.539-0500" }, "createdAt" : { "$date" : "2016-11-08T14:13:17.539-0500" }, "title" : "Attendance", "content" : "Turns out that a system written by several people, over several semesters, often in a rush to fix something, creates a rather piecemeal system with many small holes. Over the past couple of weeks I've been trying to find and fix the most prominent of issues (for instance, if you submitted a bonus code, it gave a regular attendance  instead). Unfortunately, I think the biggest issue is one that needs a pretty major refactor - much of the code is spaghetti-like, with multiple front-end pages and back-end apis duplicating the same functionality for different purposes. Starting to segment that code better greatly helps use ability and future developers, but unfortunately it will hamper current ones that are trying to add functionality and running into merge conflicts.", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55f790d0152081d8678c5b42" }, "date" : { "$date" : "2016-11-08T14:13:17.533-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "58224812de8ccfb3149b219e" }, "updatedAt" : { "$date" : "2016-11-08T16:48:02.785-0500" }, "createdAt" : { "$date" : "2016-11-08T16:48:02.785-0500" }, "title" : "Seed Files", "content" : "Over the past week I added a PR which added achievement seed files to our local website. However, I had only added one seed file which was a simple description. I did not test all possible cases for achievements. When mentors were reviewing my PR this was something they noted, and, I added three new local seed files. One which had a picture embedded in it, another which had a picture with a multi-line description, and one with just a mult-line description. The PR is not complete yet because I have forgot to add the title characteristic to the the achievements; this should get done by today since it is a very easy fix.  I would not have a caught it if a mentor had not peer-reviewed my PR. Thanks Kiana!", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e60740b997149c20e59afd" }, "date" : { "$date" : "2016-11-08T16:48:02.784-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "58224863de8ccfb3149b21a0" }, "updatedAt" : { "$date" : "2016-11-08T16:49:23.687-0500" }, "createdAt" : { "$date" : "2016-11-08T16:49:23.687-0500" }, "title" : "Additional Repositories", "content" : "As a developer new to web technologies, I’m very excited to be given the opportunity to expand my skill set and broaden my horizons in that area. In my latest achievement, I’ve implemented functionality to add multiple repositories URLs to project profiles with validation on the back and front end. Since, I wasn’t familiar with server side, it took some guidance from mentors to figure out that the backend was not updating the data correctly. After fixing this, clicking the add and remove buttons started to work. I then implemented validation to make sure the additional repositories could not be submitted if they were not complete URLs. Finally, I refactored the existing code into a custom directive. This actually wasn’t too hard, but it took me a while to figure out the element tag should be named after the directive name, not the html file! I’m really excited to see this functionality deployed for everyone.", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "57c616e47f63f991054fed46" }, "date" : { "$date" : "2016-11-08T16:49:23.686-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "58225185de8ccfb3149b21e8" }, "updatedAt" : { "$date" : "2016-11-08T17:28:21.994-0500" }, "createdAt" : { "$date" : "2016-11-08T17:28:21.994-0500" }, "title" : "Deep copy in AngularJS", "content" : "I was trying to get the smallgroup's coloring blocks to change color for different days. I got so close to make it work. I found a way to change the isPresent value for everyone corresponding to the day. But I couldn't change it back to the original value. I tried \"_.clone() and Angular.Copy() \". None of them was able to deep copy the entire object recursively and completely (the user.attendance field was still link to the original user object, i.e. if you make change to the original object the clone copy would also gets the change). So not really a deep copy. I was pretty bummed about it. it looks pretty cool when it works, but if there isn't a less expensive or viable option to implement it, I might drop it.\n\n\"#1st post", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "57d85da47c5ab89e6eedca59" }, "date" : { "$date" : "2016-11-08T17:28:21.993-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "582b66f2d21ca1d30c228cf8" }, "updatedAt" : { "$date" : "2016-11-15T14:50:10.652-0500" }, "createdAt" : { "$date" : "2016-11-15T14:50:10.652-0500" }, "title" : "Onboarding New Developers", "content" : "As the semester continues it is awesome to see all the developers on Observatory contribute. Often Observatory had only one or two developers working a lot with minor fixes from others. This semester after getting developers on-boarded with increasingly challenging issues we have a strong team. For future semesters I definitely think that students should work hard to have new developers on-boarding gradually scale up with code reviews and pair programming.\n\nOther things helping new developers this semester is improving code quality and more tests. Observatory has taken some time to step back and refine older features as well as rewrite and create tests for components. I think this is an important step to enable the future success of the project.\n\nAlways looking to improve the developer productivity and experience I would love to hear what went well and what needs improvement for future semesters.\n\nThanks,\nAaron", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e5a06cc47024f712047b05" }, "date" : { "$date" : "2016-11-15T14:50:10.651-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "582b999580017a9a15d09209" }, "updatedAt" : { "$date" : "2016-11-15T18:26:13.286-0500" }, "createdAt" : { "$date" : "2016-11-15T18:26:13.286-0500" }, "title" : "Github API Wrapper Woes", "content" : "After finishing a basic implementation for getting commits from github, I ran into some blocks. We wanted to add more functionality to control what commits we get for a project, like commits since date x, or commits before date y. The github API supports this, and so do many wrappers, including the one I had been using. However, the wrapper which I am using supports this in a very impractical (and undocumented) way. Despite being listed by github as one of the recommended API wrappers for javascript. \n\nSo, long story short, it looks like I will have to switch to a different (and more user friendly) github API wrapper. Thankfully, it should only require a minor amount of refactoring.", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "57c5ece57f63f991054fed41" }, "date" : { "$date" : "2016-11-15T18:26:13.285-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "584b25585c9cdc317996a94b" }, "updatedAt" : { "$date" : "2016-12-09T16:43:43.782-0500" }, "createdAt" : { "$date" : "2016-12-09T16:42:48.646-0500" }, "title" : "Progress Update 12/9: Github Integration - The Final Stretch!", "content" : "In my last blog post, I talked (complained) about the issues I was having with the github API. Thankfully, I have resolved all those issues, and it was actually much less tidious than I expected. In fact, due to the switch I was able to refactor my github code to make it much less bloated and more streamline. \n\nNow, for my progress update. Currently I have a hardcoded P.O.C working perfectly. All that is left is for me to integrate my github code into our REST api. Now, that's where I've been having issues. I am very familiar with Observatory's server archicture, REST API, MVC design, etc... However, what I am not familiar with is javascript. While I have been learning and improving my javascript skills throughout this semester, it has been a slow and bumpy ride. What I mean by that, is if I was attempting to do all of this in python, I probably would have been done weeks ago. Thankfully, I'm almost done, all I need to do is spend a few more hours googling, tinkering and debugging. So, I will definitely be done before the end of the semester!", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "57c5ece57f63f991054fed41" }, "date" : { "$date" : "2016-12-09T16:42:48.645-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "584b6e485c9cdc317996a997" }, "updatedAt" : { "$date" : "2016-12-09T21:54:00.524-0500" }, "createdAt" : { "$date" : "2016-12-09T21:54:00.524-0500" }, "title" : "The World of Web Development", "content" : "I joined Observatory this semester with limited knowledge of just HTML and CSS. I've had a great experience learning about new frameworks and technologies like AngularJS, Bootstrap, and Grunt. At first, I was a bit nervous that I wouldn't be able to contribute much, but everyone was very helpful with any questions I had (thank you, mentors!). I think the biggest accomplishment I made this semester was either adding functionality to add additional repositories to projects, or maybe adding the user pages to browser history (to help with user experience). Next semester, I want to work a little more on the back end and perhaps learn how to make tests.", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "57c616e47f63f991054fed46" }, "date" : { "$date" : "2016-12-09T21:54:00.523-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "584c931c5c9cdc317996a99b" }, "updatedAt" : { "$date" : "2016-12-10T18:43:24.492-0500" }, "createdAt" : { "$date" : "2016-12-10T18:43:24.492-0500" }, "title" : "The Attendance Submission Bug", "content" : "Last week, I (well, I and the rest of the internet) fixed the attendance submission bug which would call the attendance api countless times if the user wouldn't stop pressing Enter. Thanks to Angular's awesome two-way data binding and dirty-checking, I was able to get it fixed within 3 lines. No need to hand write two listeners (model to view, view to model) which could be quite a bit of work. \nVery nice, AngularJs.", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "57d85da47c5ab89e6eedca59" }, "date" : { "$date" : "2016-12-10T18:43:24.491-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "584fa1f35c9cdc317996a99e" }, "updatedAt" : { "$date" : "2016-12-13T02:23:43.085-0500" }, "createdAt" : { "$date" : "2016-12-13T02:23:31.897-0500" }, "title" : "End of Semester Wrap Up", "content" : "Wow, my third semester at RCOS is already over. This semester I focused on writing tests and didn't really work on adding new features to Observatory. I wrote tests for all achievement endpoints and wrote tests for project endpoints. Last week I wrote a test for an attendance endpoint. I also had to update the seed files for the achievements on our test page since those were not up yet. It's been an educational experience this semester, since I have learned just how time consuming it can be to write tests for a software project. Next semester I would like to write more tests as well as fix more back-end related issues.", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "55e60740b997149c20e59afd" }, "date" : { "$date" : "2016-12-13T02:23:31.895-0500" }, "__v" : 0 }

{ "_id" : { "$oid" : "585007eb5c9cdc317996a9a0" }, "updatedAt" : { "$date" : "2016-12-13T18:00:00.795-0500" }, "createdAt" : { "$date" : "2016-12-13T09:38:35.677-0500" }, "title" : "Observatory is huge", "content" : "This is my first semester at RCOS as well as on Observatory. I met a lot of awesome people; ate yummy ice cream cake, learned new things, 10/10 would do again. web development is harder that I expected and the codebase of Observatory is huge but well-organized. I don't think I even read 1/2 of the codebase. There's so much to learn: I just figured out what's a callback and I'm still not sure how auth.service works. I very enjoyed my time on the project. As of next year, I kind of want to do something with Michael's github data, perhaps some sort of data visualization page.", "projectId" : { "$oid" : "55e5a093c47024f712047b06" }, "author" : { "$oid" : "57d85da47c5ab89e6eedca59" }, "date" : { "$date" : "2016-12-13T09:38:35.675-0500" }, "__v" : 0 }
